// TODO Convert ESLint config file to JS and use benefits of spreading common rules between overrides

{
  "env": {
    "es6": true,
    "greasemonkey": true,
    "jquery": true,
    "shared-node-browser": true,
    "webextensions": true,
    "browser": true
  },
  "extends": ["airbnb-base"],
  "globals": {
    "api": "readonly",
    "con": "readonly",
    "j": "readonly",
    "utils": "readonly"
  },
  "ignorePatterns": [
    "dist/",
    "node_modules/",
    "test/dist",
    "*.min.js",
    "docs/",
    "package/",
    "eslint/",
    "test/", //TODO
    "webpackConfig/" //TODO
  ],
  "overrides": [
    {
      "extends": [
        "eslint:recommended",
        "airbnb-base",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended",
        "prettier/@typescript-eslint"
      ],
      "files": ["*.ts"],
      "parser": "@typescript-eslint/parser",
      "plugins": ["@typescript-eslint", "jquery-unsafe-malsync", "no-unsanitized"],
      "rules": {
        "block-scoped-var": "warn", //TODO
        "vars-on-top": "off",
        "import/no-self-import": "warn",
        "import/no-extraneous-dependencies": "off",
        "import/no-webpack-loader-syntax": "off",
        "no-await-in-loop": "warn", // TODO
        "import/no-cycle": "warn", // TODO
        "prefer-destructuring": "warn", // TODO
        "no-unreachable": "warn",
        "no-continue": "off",
        "no-throw-literal": "off",
        "guard-for-in": "off",
        "no-param-reassign": "warn",
        "no-underscore-dangle": "off",
        "class-methods-use-this": "off",
        "import/extensions": [
          "error",
          "ignorePackages",
          {
            "js": "never",
            "ts": "never"
          }
        ],
        "import/prefer-default-export": "off",
        "no-plusplus": 0,
        "no-unsanitized/method": [
          "error",
          {
            "escape": {
              "methods": ["j.html"]
            }
          }
        ],
        "no-unsanitized/property": [
          "error",
          {
            "escape": {
              "methods": ["j.html"]
            }
          }
        ],
        "jquery-unsafe-malsync/no-xss-jquery": 2,
        "@typescript-eslint/ban-ts-ignore": "warn",
        "@typescript-eslint/camelcase": "warn",
        "@typescript-eslint/class-name-casing": "warn",
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-this-alias": "warn",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-unused-vars": ["error", { "args": "none" }],
        "global-require": "warn",
        "import/no-unresolved": "warn",
        "no-fallthrough": "off",
        "no-inner-declarations": "warn", // TODO
        "no-restricted-syntax": [
          "error",
          // TODO: Reenable rule
          //{
          //  "selector": "ForInStatement",
          //  "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
          //},
          {
            "selector": "ForOfStatement",
            "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations."
          },
          {
            "selector": "LabeledStatement",
            "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
          },
          {
            "selector": "WithStatement",
            "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
          }
        ]
      },
      "settings": {
        "import/extensions": [".js", ".ts"],
        "import/resolver": {
          "node": {
            "extensions": [".js", ".ts", ".vue"]
          }
        }
      }
    },
    {
      "extends": ["plugin:vue/vue3-recommended", "@vue/prettier"],
      "files": ["*.vue"],
      "parser": "vue-eslint-parser",
      "plugins": ["vue", "prettier"],
      "rules": {
        "vue/component-tags-order": "off",
        "vue/no-v-for-template-key-on-child": "off",
        "vue/no-deprecated-destroyed-lifecycle": "off",
        "vue/no-v-html": "error",
        "no-restricted-syntax": [
          "error",
          // TODO: Reenable rule
          //{
          //  "selector": "ForInStatement",
          //  "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
          //},
          {
            "selector": "ForOfStatement",
            "message": "iterators/generators require regenerator-runtime, which is too heavyweight for this guide to allow them. Separately, loops should be avoided in favor of array iterations."
          },
          {
            "selector": "LabeledStatement",
            "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
          },
          {
            "selector": "WithStatement",
            "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
          }
        ]
      }
    },
    {
      "extends": ["plugin:prettier/recommended"],
      "files": ["*.js"],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          {
            "devDependencies": true
          }
        ]
      }
    }
  ],
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "root": true,
  "rules": {
    "prettier/prettier": ["error", { "singleQuote": true }],
    "eqeqeq": ["error", "always"],
    "no-extend-native": "off",
    "prefer-template": "error",
    "no-plusplus": "off",
    "no-param-reassign": "warn",
    "no-console": "off",
    "guard-for-in": "off",
    "no-underscore-dangle": "off",
    "radix": ["error", "as-needed"],
    "class-methods-use-this": "off",
    "no-throw-literal": "off",
    "no-await-in-loop": "off",
    "prefer-destructuring": ["error", { "array": false, "object": false }],
    "import/no-webpack-loader-syntax": "off",
    "no-continue": "off",
    "no-fallthrough": "off",
    "import/no-extraneous-dependencies": "off",
    "block-scoped-var": "warn", //TODO
    "import/prefer-default-export": "off", //TODO
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "ts": "never"
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".ts", ".vue"]
      }
    }
  }
}
